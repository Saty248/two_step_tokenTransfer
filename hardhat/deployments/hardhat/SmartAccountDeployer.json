{
  "address": "0x5FbDB2315678afecb367f032d93F642f64180aa3",
  "abi": [
    {
      "inputs": [],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "owner",
          "type": "address"
        }
      ],
      "name": "OwnableInvalidOwner",
      "type": "error"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "account",
          "type": "address"
        }
      ],
      "name": "OwnableUnauthorizedAccount",
      "type": "error"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "func",
          "type": "string"
        }
      ],
      "name": "Log",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address",
          "name": "contractAddress",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "address",
          "name": "owner",
          "type": "address"
        }
      ],
      "name": "NewAccount",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address",
          "name": "ownerAddress",
          "type": "address"
        }
      ],
      "name": "Owner",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "previousOwner",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "OwnershipTransferred",
      "type": "event"
    },
    {
      "stateMutability": "payable",
      "type": "fallback"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "user",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "_contractMapper",
          "type": "address"
        }
      ],
      "name": "createAndAddSmartAccount",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "owner",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "renounceOwnership",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "transferOwnership",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "stateMutability": "payable",
      "type": "receive"
    }
  ],
  "transactionHash": "0xe8f40a8e4bb427088d051e4a8930da2905d58eeda0625de1d207506dfb7de8f6",
  "receipt": {
    "to": null,
    "from": "0xf39Fd6e51aad88F6F4ce6aB8827279cffFb92266",
    "contractAddress": "0x5FbDB2315678afecb367f032d93F642f64180aa3",
    "transactionIndex": 0,
    "gasUsed": "1728335",
    "logsBloom": "0x
    "blockHash": "0x8a2868524b8d80f56d1c97e1dfb278e6e252a1c72e8eed384f46f7f51abed06f",
    "transactionHash": "0xe8f40a8e4bb427088d051e4a8930da2905d58eeda0625de1d207506dfb7de8f6",
    "logs": [
      {
        "transactionIndex": 0,
        "blockNumber": 1,
        "transactionHash": "0xe8f40a8e4bb427088d051e4a8930da2905d58eeda0625de1d207506dfb7de8f6",
        "address": "0x5FbDB2315678afecb367f032d93F642f64180aa3",
        "topics": [
          "0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0",
          "0x0000000000000000000000000000000000000000000000000000000000000000",
          "0x000000000000000000000000f39fd6e51aad88f6f4ce6ab8827279cfffb92266"
        ],
        "data": "0x",
        "logIndex": 0,
        "blockHash": "0x8a2868524b8d80f56d1c97e1dfb278e6e252a1c72e8eed384f46f7f51abed06f"
      },
      {
        "transactionIndex": 0,
        "blockNumber": 1,
        "transactionHash": "0xe8f40a8e4bb427088d051e4a8930da2905d58eeda0625de1d207506dfb7de8f6",
        "address": "0x5FbDB2315678afecb367f032d93F642f64180aa3",
        "topics": [
          "0xa5e220c2c27d986cc8efeafa8f34ba6ea6bf96a34e146b29b6bdd8587771b130"
        ],
        "data": "0x000000000000000000000000f39fd6e51aad88f6f4ce6ab8827279cfffb92266",
        "logIndex": 1,
        "blockHash": "0x8a2868524b8d80f56d1c97e1dfb278e6e252a1c72e8eed384f46f7f51abed06f"
      }
    ],
    "blockNumber": 1,
    "cumulativeGasUsed": "1728335",
    "status": 1,
    "byzantium": true
  },
  "args": [],
  "numDeployments": 1,
  "solcInputHash": "d5ebbef8cacf69cb300888ebbd38e443",
  "metadata": "{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"OwnableInvalidOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"OwnableUnauthorizedAccount\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"func\",\"type\":\"string\"}],\"name\":\"Log\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"contractAddress\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"NewAccount\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"ownerAddress\",\"type\":\"address\"}],\"name\":\"Owner\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"stateMutability\":\"payable\",\"type\":\"fallback\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_contractMapper\",\"type\":\"address\"}],\"name\":\"createAndAddSmartAccount\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"stateMutability\":\"payable\",\"type\":\"receive\"}],\"devdoc\":{\"errors\":{\"OwnableInvalidOwner(address)\":[{\"details\":\"The owner is not a valid owner account. (eg. `address(0)`)\"}],\"OwnableUnauthorizedAccount(address)\":[{\"details\":\"The caller account is not authorized to perform an operation.\"}]},\"kind\":\"dev\",\"methods\":{\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/SmartAccountDeployer.sol\":\"SmartAccountDeployer\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/access/Ownable.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v5.0.0) (access/Ownable.sol)\\n\\npragma solidity ^0.8.20;\\n\\nimport {Context} from \\\"../utils/Context.sol\\\";\\n\\n/**\\n * @dev Contract module which provides a basic access control mechanism, where\\n * there is an account (an owner) that can be granted exclusive access to\\n * specific functions.\\n *\\n * The initial owner is set to the address provided by the deployer. This can\\n * later be changed with {transferOwnership}.\\n *\\n * This module is used through inheritance. It will make available the modifier\\n * `onlyOwner`, which can be applied to your functions to restrict their use to\\n * the owner.\\n */\\nabstract contract Ownable is Context {\\n    address private _owner;\\n\\n    /**\\n     * @dev The caller account is not authorized to perform an operation.\\n     */\\n    error OwnableUnauthorizedAccount(address account);\\n\\n    /**\\n     * @dev The owner is not a valid owner account. (eg. `address(0)`)\\n     */\\n    error OwnableInvalidOwner(address owner);\\n\\n    event OwnershipTransferred(address indexed previousOwner, address indexed newOwner);\\n\\n    /**\\n     * @dev Initializes the contract setting the address provided by the deployer as the initial owner.\\n     */\\n    constructor(address initialOwner) {\\n        if (initialOwner == address(0)) {\\n            revert OwnableInvalidOwner(address(0));\\n        }\\n        _transferOwnership(initialOwner);\\n    }\\n\\n    /**\\n     * @dev Throws if called by any account other than the owner.\\n     */\\n    modifier onlyOwner() {\\n        _checkOwner();\\n        _;\\n    }\\n\\n    /**\\n     * @dev Returns the address of the current owner.\\n     */\\n    function owner() public view virtual returns (address) {\\n        return _owner;\\n    }\\n\\n    /**\\n     * @dev Throws if the sender is not the owner.\\n     */\\n    function _checkOwner() internal view virtual {\\n        if (owner() != _msgSender()) {\\n            revert OwnableUnauthorizedAccount(_msgSender());\\n        }\\n    }\\n\\n    /**\\n     * @dev Leaves the contract without owner. It will not be possible to call\\n     * `onlyOwner` functions. Can only be called by the current owner.\\n     *\\n     * NOTE: Renouncing ownership will leave the contract without an owner,\\n     * thereby disabling any functionality that is only available to the owner.\\n     */\\n    function renounceOwnership() public virtual onlyOwner {\\n        _transferOwnership(address(0));\\n    }\\n\\n    /**\\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\\n     * Can only be called by the current owner.\\n     */\\n    function transferOwnership(address newOwner) public virtual onlyOwner {\\n        if (newOwner == address(0)) {\\n            revert OwnableInvalidOwner(address(0));\\n        }\\n        _transferOwnership(newOwner);\\n    }\\n\\n    /**\\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\\n     * Internal function without access restriction.\\n     */\\n    function _transferOwnership(address newOwner) internal virtual {\\n        address oldOwner = _owner;\\n        _owner = newOwner;\\n        emit OwnershipTransferred(oldOwner, newOwner);\\n    }\\n}\\n\",\"keccak256\":\"0xff6d0bb2e285473e5311d9d3caacb525ae3538a80758c10649a4d61029b017bb\",\"license\":\"MIT\"},\"@openzeppelin/contracts/utils/Context.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v5.0.1) (utils/Context.sol)\\n\\npragma solidity ^0.8.20;\\n\\n/**\\n * @dev Provides information about the current execution context, including the\\n * sender of the transaction and its data. While these are generally available\\n * via msg.sender and msg.data, they should not be accessed in such a direct\\n * manner, since when dealing with meta-transactions the account sending and\\n * paying for execution may not be the actual sender (as far as an application\\n * is concerned).\\n *\\n * This contract is only required for intermediate, library-like contracts.\\n */\\nabstract contract Context {\\n    function _msgSender() internal view virtual returns (address) {\\n        return msg.sender;\\n    }\\n\\n    function _msgData() internal view virtual returns (bytes calldata) {\\n        return msg.data;\\n    }\\n\\n    function _contextSuffixLength() internal view virtual returns (uint256) {\\n        return 0;\\n    }\\n}\\n\",\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\"},\"contracts/SmartAccountDeployer.sol\":{\"content\":\"//SPDX-License-Identifier: MIT\\npragma solidity ^0.8.19;\\nimport \\\"@openzeppelin/contracts/access/Ownable.sol\\\";\\nimport \\\"./SmartWallet.sol\\\";\\ninterface IContractMapper {\\n    function getSmartAccount(address user)external view returns(address);\\n    function setSmartAccount(address user,address smartAccount) external;\\n}\\n\\ncontract SmartAccountDeployer is Ownable{\\n    event Owner(address ownerAddress);\\n    event Log(string func);\\n    event NewAccount(address contractAddress,address owner);\\n    constructor() Ownable(msg.sender) {\\n      emit Owner(msg.sender);\\n    }\\n    function createAndAddSmartAccount(address user,address _contractMapper)external  onlyOwner returns(address){\\n        emit Log(\\\"createAndAddSmartAccount\\\");\\n        IContractMapper contractMapper=IContractMapper(_contractMapper);\\n        address userAcc=contractMapper.getSmartAccount(user);\\n        if(userAcc==address(0x0000000000000000000000000000000000000000)){\\n            SmartWallet newAccount=new SmartWallet(user);\\n            emit NewAccount(address(newAccount), user);\\n            return address(newAccount);\\n        }else{\\n            return userAcc;\\n        }\\n\\n    }\\n    fallback() external payable {\\n        // send / transfer (forwards 2300 gas to this fallback function)\\n        // call (forwards all of the gas)\\n        emit Log(\\\"fallback\\\" );\\n    }\\n\\n    // Receive is a variant of fallback that is triggered when msg.data is empty\\n    receive() external payable {\\n        emit Log(\\\"receive\\\");\\n    }\\n}\",\"keccak256\":\"0x13789316ecf4c1a03f13a77119b8d4bbcf5511cc8e95d246f57d2d81309cafaa\",\"license\":\"MIT\"},\"contracts/SmartWallet.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity ^0.8.19;\\n\\n\\nimport \\\"@openzeppelin/contracts/access/Ownable.sol\\\";\\nerror notAnOWner(address);\\ncontract SmartWallet is Ownable {\\n    address[] internal erc20s;\\n    address[] internal erc721s;\\n    \\n    event Log(string func);\\n    event ContractAdded(address _contract);\\n\\nconstructor(address owner)Ownable(owner){}\\n    \\nfunction balance()external view onlyOwner returns(uint){\\nreturn address(this).balance;\\n}\\n\\nfunction iserc20TokenOwner(address contAddress) public view returns(bool){\\n    bool isTokenOwner=false;\\n    for (uint i = 0; i < erc20s.length; i++) {\\n        if(contAddress==erc20s[i]){\\n            isTokenOwner=true;\\n            break;\\n        }\\n        \\n    }\\n    return isTokenOwner; \\n}\\n\\nfunction iserc721TokenOwner(address contAddress) public view returns(bool){\\n    bool isTokenOwner=false;\\n    for (uint i = 0; i < erc721s.length; i++) {\\n        if(contAddress==erc721s[i]){\\n            isTokenOwner=true;\\n            break;\\n        }\\n        \\n    }\\n    return isTokenOwner; \\n}\\n\\nfunction adderc20Contract(address contractAddress)external{\\n    emit Log(\\\"adderc20Contract\\\");\\n    if(contractAddress==address(0x0000000000000000000000000000000000000000)) revert(\\\"zero address\\\");\\n    \\n    erc20s.push(contractAddress);\\n    emit ContractAdded(contractAddress);\\n}\\nfunction adderc721Contract(address contractAddress)external{\\n    emit Log(\\\"adderc721Contract\\\");\\n    if(contractAddress==address(0x0000000000000000000000000000000000000000)) revert(\\\"zero address\\\");\\n    \\n    erc721s.push(contractAddress);\\n    emit ContractAdded(contractAddress);\\n}\\n\\n\\nfunction erc20Caller(address contAddress,bytes memory funcNameWithARguments)external returns(bytes memory){\\n    emit Log(\\\"erc20Caller\\\");\\n     bool isTokenOwner=iserc20TokenOwner(contAddress);\\n     if(!isTokenOwner) revert notAnOWner(contAddress);\\n     (bool success, bytes memory data)=contAddress.call(funcNameWithARguments);\\n     require(success,\\\"function call failed\\\");\\n     return data;\\n\\n\\n}\\n\\nfunction erc721Caller(address contAddress,bytes memory funcNameWithARguments)external returns(bytes memory){\\n    emit Log(\\\"erc20Caller\\\");\\n     bool isTokenOwner=iserc721TokenOwner(contAddress);\\n     if(!isTokenOwner) revert notAnOWner(contAddress);\\n     (bool success, bytes memory data)=contAddress.call(funcNameWithARguments);\\n     require(success,\\\"function call failed\\\");\\n     return data;\\n\\n\\n}\\n\\nfallback() external payable {\\n        // send / transfer (forwards 2300 gas to this fallback function)\\n        // call (forwards all of the gas)\\n        emit Log(\\\"fallback\\\" );\\n    }\\n\\n    // Receive is a variant of fallback that is triggered when msg.data is empty\\n    receive() external payable {\\n        emit Log(\\\"receive\\\");\\n    }\\n\\n}\",\"keccak256\":\"0x62d31d16887924d3c6727334ba88678716d53b3ef3e26fbd6f89d277d10f8940\",\"license\":\"MIT\"}},\"version\":1}",
  "bytecode": "0x608060405234801561001057600080fd5b5033600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff16036100845760006040517f1e4fbdf700000000000000000000000000000000000000000000000000000000815260040161007b91906101d5565b60405180910390fd5b610093816100d060201b60201c565b507fa5e220c2c27d986cc8efeafa8f34ba6ea6bf96a34e146b29b6bdd8587771b130336040516100c391906101d5565b60405180910390a16101f0565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050816000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b60006101bf82610194565b9050919050565b6101cf816101b4565b82525050565b60006020820190506101ea60008301846101c6565b92915050565b611de1806101ff6000396000f3fe608060405260043610620000495760003560e01c80630ef25a5c14620000c1578063715018a614620001055780638da5cb5b146200011f578063f2fde38b146200014f5762000088565b3662000088577fcf34ef537ac33ee1ac626ca1587a0a7e8e51561e5514f8cb36afa1c5102b3bab6040516200007e90620005a6565b60405180910390a1005b7fcf34ef537ac33ee1ac626ca1587a0a7e8e51561e5514f8cb36afa1c5102b3bab604051620000b79062000618565b60405180910390a1005b348015620000ce57600080fd5b50620000ed6004803603810190620000e79190620006a4565b6200017d565b604051620000fc9190620006fc565b60405180910390f35b3480156200011257600080fd5b506200011d6200030d565b005b3480156200012c57600080fd5b506200013762000325565b604051620001469190620006fc565b60405180910390f35b3480156200015c57600080fd5b506200017b600480360381019062000175919062000719565b6200034e565b005b600062000189620003db565b7fcf34ef537ac33ee1ac626ca1587a0a7e8e51561e5514f8cb36afa1c5102b3bab604051620001b8906200079b565b60405180910390a1600082905060008173ffffffffffffffffffffffffffffffffffffffff16639199a07c866040518263ffffffff1660e01b8152600401620002029190620006fc565b602060405180830381865afa15801562000220573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190620002469190620007d4565b9050600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff160362000301576000856040516200028e9062000537565b6200029a9190620006fc565b604051809103906000f080158015620002b7573d6000803e3d6000fd5b5090507f14cb25cca821184a88389fa7823ef6a4cd65897a89cbdcf5169542b8d790478b8187604051620002ed92919062000806565b60405180910390a180935050505062000307565b80925050505b92915050565b62000317620003db565b6200032360006200046b565b565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b62000358620003db565b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1603620003cd5760006040517f1e4fbdf7000000000000000000000000000000000000000000000000000000008152600401620003c49190620006fc565b60405180910390fd5b620003d8816200046b565b50565b620003e56200052f565b73ffffffffffffffffffffffffffffffffffffffff166200040562000325565b73ffffffffffffffffffffffffffffffffffffffff161462000469576200042b6200052f565b6040517f118cdaa7000000000000000000000000000000000000000000000000000000008152600401620004609190620006fc565b60405180910390fd5b565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050816000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b600033905090565b611578806200083483390190565b600082825260208201905092915050565b7f7265636569766500000000000000000000000000000000000000000000000000600082015250565b60006200058e60078362000545565b91506200059b8262000556565b602082019050919050565b60006020820190508181036000830152620005c1816200057f565b9050919050565b7f66616c6c6261636b000000000000000000000000000000000000000000000000600082015250565b60006200060060088362000545565b91506200060d82620005c8565b602082019050919050565b600060208201905081810360008301526200063381620005f1565b9050919050565b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b60006200066c826200063f565b9050919050565b6200067e816200065f565b81146200068a57600080fd5b50565b6000813590506200069e8162000673565b92915050565b60008060408385031215620006be57620006bd6200063a565b5b6000620006ce858286016200068d565b9250506020620006e1858286016200068d565b9150509250929050565b620006f6816200065f565b82525050565b6000602082019050620007136000830184620006eb565b92915050565b6000602082840312156200073257620007316200063a565b5b600062000742848285016200068d565b91505092915050565b7f637265617465416e64416464536d6172744163636f756e740000000000000000600082015250565b60006200078360188362000545565b915062000790826200074b565b602082019050919050565b60006020820190508181036000830152620007b68162000774565b9050919050565b600081519050620007ce8162000673565b92915050565b600060208284031215620007ed57620007ec6200063a565b5b6000620007fd84828501620007bd565b91505092915050565b60006040820190506200081d6000830185620006eb565b6200082c6020830184620006eb565b939250505056fe60806040523480156200001157600080fd5b5060405162001578380380620015788339818101604052810190620000379190620001f4565b80600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1603620000ad5760006040517f1e4fbdf7000000000000000000000000000000000000000000000000000000008152600401620000a4919062000237565b60405180910390fd5b620000be81620000c660201b60201c565b505062000254565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050816000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000620001bc826200018f565b9050919050565b620001ce81620001af565b8114620001da57600080fd5b50565b600081519050620001ee81620001c3565b92915050565b6000602082840312156200020d576200020c6200018a565b5b60006200021d84828501620001dd565b91505092915050565b6200023181620001af565b82525050565b60006020820190506200024e600083018462000226565b92915050565b61131480620002646000396000f3fe6080604052600436106100955760003560e01c8063b69ef8a811610059578063b69ef8a8146101ed578063c04ad73d14610218578063d170c52e14610241578063dd81b82a1461027e578063f2fde38b146102bb576100d1565b806333c73598146101085780634c03e0c114610145578063715018a6146101825780638da5cb5b146101995780639d63aab2146101c4576100d1565b366100d1577fcf34ef537ac33ee1ac626ca1587a0a7e8e51561e5514f8cb36afa1c5102b3bab6040516100c790610bc7565b60405180910390a1005b7fcf34ef537ac33ee1ac626ca1587a0a7e8e51561e5514f8cb36afa1c5102b3bab6040516100fe90610c33565b60405180910390a1005b34801561011457600080fd5b5061012f600480360381019061012a9190610e0b565b6102e4565b60405161013c9190610ee6565b60405180910390f35b34801561015157600080fd5b5061016c60048036038101906101679190610f08565b610425565b6040516101799190610f50565b60405180910390f35b34801561018e57600080fd5b506101976104d3565b005b3480156101a557600080fd5b506101ae6104e7565b6040516101bb9190610f7a565b60405180910390f35b3480156101d057600080fd5b506101eb60048036038101906101e69190610f08565b610510565b005b3480156101f957600080fd5b50610202610651565b60405161020f9190610fae565b60405180910390f35b34801561022457600080fd5b5061023f600480360381019061023a9190610f08565b610661565b005b34801561024d57600080fd5b5061026860048036038101906102639190610f08565b6107a2565b6040516102759190610f50565b60405180910390f35b34801561028a57600080fd5b506102a560048036038101906102a09190610e0b565b610850565b6040516102b29190610ee6565b60405180910390f35b3480156102c757600080fd5b506102e260048036038101906102dd9190610f08565b610991565b005b60607fcf34ef537ac33ee1ac626ca1587a0a7e8e51561e5514f8cb36afa1c5102b3bab60405161031390611015565b60405180910390a1600061032684610425565b90508061036a57836040517fae384e230000000000000000000000000000000000000000000000000000000081526004016103619190610f7a565b60405180910390fd5b6000808573ffffffffffffffffffffffffffffffffffffffff16856040516103929190611071565b6000604051808303816000865af19150503d80600081146103cf576040519150601f19603f3d011682016040523d82523d6000602084013e6103d4565b606091505b509150915081610419576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610410906110d4565b60405180910390fd5b80935050505092915050565b6000806000905060005b6001805490508110156104c957600181815481106104505761044f6110f4565b5b9060005260206000200160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff16036104b657600191506104c9565b80806104c190611152565b91505061042f565b5080915050919050565b6104db610a17565b6104e56000610a9e565b565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b7fcf34ef537ac33ee1ac626ca1587a0a7e8e51561e5514f8cb36afa1c5102b3bab60405161053d906111e6565b60405180910390a1600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff16036105b4576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016105ab90611252565b60405180910390fd5b6002819080600181540180825580915050600190039060005260206000200160009091909190916101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055507f89c66952b48f3e96bf1d8ba1b63189520fd988a6979b8b740bd5c5d8dc53e205816040516106469190610f7a565b60405180910390a150565b600061065b610a17565b47905090565b7fcf34ef537ac33ee1ac626ca1587a0a7e8e51561e5514f8cb36afa1c5102b3bab60405161068e906112be565b60405180910390a1600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1603610705576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016106fc90611252565b60405180910390fd5b6001819080600181540180825580915050600190039060005260206000200160009091909190916101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055507f89c66952b48f3e96bf1d8ba1b63189520fd988a6979b8b740bd5c5d8dc53e205816040516107979190610f7a565b60405180910390a150565b6000806000905060005b60028054905081101561084657600281815481106107cd576107cc6110f4565b5b9060005260206000200160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff16036108335760019150610846565b808061083e90611152565b9150506107ac565b5080915050919050565b60607fcf34ef537ac33ee1ac626ca1587a0a7e8e51561e5514f8cb36afa1c5102b3bab60405161087f90611015565b60405180910390a16000610892846107a2565b9050806108d657836040517fae384e230000000000000000000000000000000000000000000000000000000081526004016108cd9190610f7a565b60405180910390fd5b6000808573ffffffffffffffffffffffffffffffffffffffff16856040516108fe9190611071565b6000604051808303816000865af19150503d806000811461093b576040519150601f19603f3d011682016040523d82523d6000602084013e610940565b606091505b509150915081610985576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161097c906110d4565b60405180910390fd5b80935050505092915050565b610999610a17565b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1603610a0b5760006040517f1e4fbdf7000000000000000000000000000000000000000000000000000000008152600401610a029190610f7a565b60405180910390fd5b610a1481610a9e565b50565b610a1f610b62565b73ffffffffffffffffffffffffffffffffffffffff16610a3d6104e7565b73ffffffffffffffffffffffffffffffffffffffff1614610a9c57610a60610b62565b6040517f118cdaa7000000000000000000000000000000000000000000000000000000008152600401610a939190610f7a565b60405180910390fd5b565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050816000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b600033905090565b600082825260208201905092915050565b7f7265636569766500000000000000000000000000000000000000000000000000600082015250565b6000610bb1600783610b6a565b9150610bbc82610b7b565b602082019050919050565b60006020820190508181036000830152610be081610ba4565b9050919050565b7f66616c6c6261636b000000000000000000000000000000000000000000000000600082015250565b6000610c1d600883610b6a565b9150610c2882610be7565b602082019050919050565b60006020820190508181036000830152610c4c81610c10565b9050919050565b6000604051905090565b600080fd5b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000610c9282610c67565b9050919050565b610ca281610c87565b8114610cad57600080fd5b50565b600081359050610cbf81610c99565b92915050565b600080fd5b600080fd5b6000601f19601f8301169050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b610d1882610ccf565b810181811067ffffffffffffffff82111715610d3757610d36610ce0565b5b80604052505050565b6000610d4a610c53565b9050610d568282610d0f565b919050565b600067ffffffffffffffff821115610d7657610d75610ce0565b5b610d7f82610ccf565b9050602081019050919050565b82818337600083830152505050565b6000610dae610da984610d5b565b610d40565b905082815260208101848484011115610dca57610dc9610cca565b5b610dd5848285610d8c565b509392505050565b600082601f830112610df257610df1610cc5565b5b8135610e02848260208601610d9b565b91505092915050565b60008060408385031215610e2257610e21610c5d565b5b6000610e3085828601610cb0565b925050602083013567ffffffffffffffff811115610e5157610e50610c62565b5b610e5d85828601610ddd565b9150509250929050565b600081519050919050565b600082825260208201905092915050565b60005b83811015610ea1578082015181840152602081019050610e86565b60008484015250505050565b6000610eb882610e67565b610ec28185610e72565b9350610ed2818560208601610e83565b610edb81610ccf565b840191505092915050565b60006020820190508181036000830152610f008184610ead565b905092915050565b600060208284031215610f1e57610f1d610c5d565b5b6000610f2c84828501610cb0565b91505092915050565b60008115159050919050565b610f4a81610f35565b82525050565b6000602082019050610f656000830184610f41565b92915050565b610f7481610c87565b82525050565b6000602082019050610f8f6000830184610f6b565b92915050565b6000819050919050565b610fa881610f95565b82525050565b6000602082019050610fc36000830184610f9f565b92915050565b7f657263323043616c6c6572000000000000000000000000000000000000000000600082015250565b6000610fff600b83610b6a565b915061100a82610fc9565b602082019050919050565b6000602082019050818103600083015261102e81610ff2565b9050919050565b600081905092915050565b600061104b82610e67565b6110558185611035565b9350611065818560208601610e83565b80840191505092915050565b600061107d8284611040565b915081905092915050565b7f66756e6374696f6e2063616c6c206661696c6564000000000000000000000000600082015250565b60006110be601483610b6a565b91506110c982611088565b602082019050919050565b600060208201905081810360008301526110ed816110b1565b9050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b600061115d82610f95565b91507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff820361118f5761118e611123565b5b600182019050919050565b7f616464657263373231436f6e7472616374000000000000000000000000000000600082015250565b60006111d0601183610b6a565b91506111db8261119a565b602082019050919050565b600060208201905081810360008301526111ff816111c3565b9050919050565b7f7a65726f20616464726573730000000000000000000000000000000000000000600082015250565b600061123c600c83610b6a565b915061124782611206565b602082019050919050565b6000602082019050818103600083015261126b8161122f565b9050919050565b7f6164646572633230436f6e747261637400000000000000000000000000000000600082015250565b60006112a8601083610b6a565b91506112b382611272565b602082019050919050565b600060208201905081810360008301526112d78161129b565b905091905056fea2646970667358221220a6ba62bdacd89c23f3913855b1a72d16bee0d3fc77c240aa8d705716fc6f257e64736f6c63430008140033a26469706673582212203d330f33126f4f2dafc47aa43aeee17d4c1bdf67e1b860c786c0b9fdf24b119f64736f6c63430008140033",
  "deployedBytecode": "",
  "devdoc": {
    "errors": {
      "OwnableInvalidOwner(address)": [
        {
          "details": "The owner is not a valid owner account. (eg. `address(0)`)"
        }
      ],
      "OwnableUnauthorizedAccount(address)": [
        {
          "details": "The caller account is not authorized to perform an operation."
        }
      ]
    },
    "kind": "dev",
    "methods": {
      "owner()": {
        "details": "Returns the address of the current owner."
      },
      "renounceOwnership()": {
        "details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner."
      },
      "transferOwnership(address)": {
        "details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
      }
    },
    "version": 1
  },
  "userdoc": {
    "kind": "user",
    "methods": {},
    "version": 1
  },
  "storageLayout": {
    "storage": [
      {
        "astId": 8,
        "contract": "contracts/SmartAccountDeployer.sol:SmartAccountDeployer",
        "label": "_owner",
        "offset": 0,
        "slot": "0",
        "type": "t_address"
      }
    ],
    "types": {
      "t_address": {
        "encoding": "inplace",
        "label": "address",
        "numberOfBytes": "20"
      }
    }
  }
}